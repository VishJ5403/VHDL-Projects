library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity instr is
port(   inp:in std_logic_vector(15 downto 0);
		  z: in std_logic;
        reset,clock:in std_logic;
        outp: out std_logic;
		  control:out std_logic_vector(21 downto 0);
        out_ascii: out std_logic_vector(39 downto 0));
end instr;

architecture rch of cov_detect is
---------------Define state type here-----------------------------
type state is (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17);
---------------Define signals of state type-----------------------
signal y_present,y_next: state:=s0;
signal out_sig: std_logic;
begin
control: process(y_present)
begin
    case y_present is
	     when s0=>
		     control<="";
		  when s1=>
		     control<="";
	     when s2=>
		     control<="";
		  when s3=>
		     control<="";
	     when s4=>
		     control<="";
		  when s5=>
		     control<="";
	     when s6=>
		     control<="";
		  when s7=>
		     control<="";
	     when s8=>
		     control<="";
		  when s9=>
		     control<="";
	     when s10=>
		     control<="";
		  when s11=>
		     control<="";
	     when s12=>
		     control<="";
		  when s13=>
		     control<="";
	     when s14=>
		     control<="";
		  when s15=>
		     control<="";
	     when s16=>
		     control<="";
		  when s17=>
		     control<="";
	     when s18=>
		     control<="";
end process;
clock_proc:process(clock,reset)
begin
    if(reset='1') then
        y_present<=init;
    elsif(clock='1' and clock' event) then
        y_present<=y_next;
    end if;
    
end process;
begin

state_transition_proc:process(inp,y_present)
begin
    case y_present is
        when s0=>
            if (inp(15 downto 12)="0001" or inp(15 downto 12)="0000" or inp(15 downto 12)="0010" or inp(15 downto 12)="0111" or inp(15 downto 12)="0101" or inp(15 downto 12)="0100") then
					y_next<=s1;
				elsif (inp(15 downto 12)="0100" ) then	
					y_next<=s11;
				elsif (inp(15 downto 12)="1100" or inp(15 downto 12)="1101") then	
					y_next<=s15;
				elsif (inp(15 downto 12)="1001" or inp(15 downto 12)="1010") then	
				   y_next<=s12;
				else
					y_next<=s14;
				end if;
		  ---------------------------------------------------------------
        when s1=>
			   if (inp(15 downto 12)="0001" or inp(15 downto 12)="0010") then
						if (inp(1 downto 0)="00") then
							y_next<=s2;
						elsif (inp(1 downto 0)="01") then
							y_next<=s2
						elsif (inp(1 downto 0)="10") then
							y_next<=s2;
						else
							y_next<=s6;
						end if;
				end if;
			   if (inp(15 downto 12)="0000" or inp(15 downto 12)="0111" or inp(15 downto 12)="0101") then
					y_next<=s5;
				end if;
				
				if (inp(15 downto 12)="1000") then
					y_next<=s10;
				end if;
		  ---------------------------------------------------------------		
		  when s2=>
			  if (inp(15 downto 12)="0001" or inp(15 downto 12)="0010") then
						if (inp(1 downto 0)="00") then
							y_next<=s3;
						elsif (inp(1 downto 0)="01") then
							y_next<=s4
						elsif (inp(1 downto 0)="10") then
							y_next<=s4;
						else
						end if;
			  end if;		
		  ---------------------------------------------------------------
		  when s3=>
			  if (inp(15 downto 12)="0001") then
						if (inp(1 downto 0)="00" or inp(1 downto 0)="11") then
							y_next<=init;
						end if;
			  end if;
			  if (inp(15 downto 12)="0000") then
					y_next<=init;
			  end if;
			  if (inp(15 downto 12)="0010" and inp(1 downto 0)="00") then
					y_next<=init;
			  end if;
		  ---------------------------------------------------------------
		  when s4=>
        if (inp(15 downto 12)="0001" or inp(15 downto 12)="0010") then
					if (inp(1 downto 0)="10" or inp(1 downto 0)="01") then
						y_next<=init;
					end if;
		  end if;
		  ---------------------------------------------------------------
		  when s5=>
		  if (inp(15 downto 12)="0000") then
				y_next<=s3;
		  end if;
		  if (inp(15 downto 12)="1000") then
				y_next<=s11;
		  end if;
        if (inp(15 downto 12)="0111") then
				y_next<=s8;
		  end if;
		  if (inp(15 downto 12)="0101") then
				y_next<=s9;
		  end if;
		  if (inp(15 downto 12)="1001") then
				y_next<=s11;
		  end if;
		  ---------------------------------------------------------------
		  when s6=>
        if (inp(15 downto 12)="0001" and inp(1 downto 0)="11") then
				y_next<=s6;
		  end if;
		  ---------------------------------------------------------------
		  when s7=>
        if (inp(15 downto 12)="0100") then
				y_next<=init;
		  end if;
		  ---------------------------------------------------------------
		  when s8=>
        if (inp(15 downto 12)="0111") then
				y_next<=init;
		  end if;
		  ---------------------------------------------------------------
		  when s9=>
        if (inp(15 downto 12)="0101") then
				y_next<=init;
		  end if;
		  ---------------------------------------------------------------
		  when s10=>
        if (z='1') then
				y_next<=s5;
		  else
				----IRE-IRF--------
		  end if;
		  ---------------------------------------------------------------
		  when s11=>
        if (inp(15 downto 12)="1001" or inp(15 downto 12)="1011" or inp(15 downto 12)="1000") then
				y_next<=init;
		  end if;
		  if (inp(15 downto 12)="0100") then
				y_next<=s7;
		  end if;
		  ---------------------------------------------------------------
		  when s12=>
        if (inp(15 downto 12)="1001") then
				y_next<=s5;
		  end if;
		  if (inp(15 downto 12)="1010") then
				y_next<=s13;
		  end if;
		  ---------------------------------------------------------------
		  when s13=>
		  if (inp(15 downto 12)="1010") then
				y_next<=s14;
		  end if;
		  ---------------------------------------------------------------
		  when s14=>
		  if (inp(15 downto 12)="1010") then
				y_next<=init;
		  end if;
		  if (inp(15 downto 12)="1011") then
				y_next<=s11;
		  end if;
		  ---------------------------------------------------------------
		  when s15=>
		  if (inp(15 downto 12)="1100" or inp(15 downto 12)="1101") then
				y_next<=s16;
		  end if;
		  ---------------------------------------------------------------
		  when s16=>
		  if (inp(15 downto 12)="1100") then
				
					
		  end if;
		  ---------------------------------------------------------------
        end case;
end process;

outp <= out_sig;

end rch