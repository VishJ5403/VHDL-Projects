library ieee;
use ieee.std_logic_1164.all;
use work.BiAdder.all;
  library ieee;
use ieee.std_logic_1164.all;
library work;
use work.Gates.all;
entity mul  is
  port (A:in std_logic_vector(3 downto 0);
        B:in std_logic_vector(2 downto 0);
		  S:out std_logic_vector(6 downto 0));
end entity mul;
architecture Struct of mul is
  signal x: std_logic_vector(14 downto 0);
begin

a1: AND_2 port map (A(0),B(0),S(0));
a2: AND_2 port map (A(1),B(0),x(0));
a3: AND_2 port map (A(2),B(0),x(1));
a4: AND_2 port map (A(3),B(0),x(2));
a5: AND_2 port map (A(0),B(1),x(3));
a6: AND_2 port map (A(1),B(1),x(4));
a7: AND_2 port map (A(2),B(1),x(5));
a8: AND_2 port map (A(3),B(1),x(6));
a9: AND_2 port map (A(0),B(2),x(11));
a10: AND_2 port map (A(1),B(2),x(12));
a11: AND_2 port map (A(2),B(2),x(13));
a12: AND_2 port map (A(3),B(2),x(14));
BA1:Bi_Adder port map(x(0),x(1),x(2),'0',x(3),x(4),x(5),x(6),'0',S(1),x(7),x(8),x(9),x(10));
BA2:Bi_Adder port map(x(7),x(8),x(9),x(10),x(11),x(12),x(13),x(14),'0',S(2),S(3),S(4),S(5),S(6));

end Struct;
